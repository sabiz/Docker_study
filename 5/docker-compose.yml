version: '3.3'
services: 
  product-service:
    depends_on:
      - "db"
    build:
      context: ./product-service
    command: ["/wait-for-it.sh", "db:8002", "--", "npm", "start"]
    ports:
      - "8000:3000"
    environment:
      - test=testvalue
      - DATABASE_PASSWORD=complexpassword
      - DATABASE_HOST=db
    volumes:
      - type: bind
        source: ./product-service
        target: /app
    networks: 
      - products
  db:
    build: ./product-db
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=complexpassword"
      - "MYSQL_DATABASE=Products"
    ports:
     - "8002:3306"
    networks: 
      - products
  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8001:3000"
    volumes:
       - my-volume:/var/lib/data
volumes:
  my-volume: 
  
networks: 
  products:

# docker-compose up -d, runs it in detached mode
# docker compose down, pulls down all containers
# docker-compose build, build all images

